{
  "openapi": "3.0.1",
  "info": {
    "title": "Kura API",
    "description": "API specification for Kura's agent and session management endpoints",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://backend.trykura.com"
    }
  ],
  "paths": {
    "/run_agent": {
      "post": {
        "description": "Initiates an agent run with specified parameters",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentRunRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Agent run initiated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentRunResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/get_session/{session_id}": {
      "get": {
        "description": "Returns comprehensive information about a session, including its current status, execution metadata, workflow blocks that have been executed, and agent information. This endpoint provides a complete view of the session's execution history and results.",
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "description": "Unique identifier for the session",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Session execution data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionExecutionData"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/get_session_status/{session_id}": {
      "get": {
        "description": "Returns only the status information of a session without the detailed execution data. This lightweight endpoint is useful for polling the current state of a session.",
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "description": "Unique identifier for the session",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Session status information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionStatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/create_agent_auth_profile": {
      "post": {
        "description": "Securely stores authentication data for an agent. This endpoint encrypts sensitive credentials that the agent needs to access external services. The data is stored securely and can only be accessed using the returned auth token when running the agent.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAgentAuthProfileRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Authentication data stored successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAgentAuthProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - auth data doesn't match agent arguments",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid API key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/update_agent_auth_profile": {
      "post": {
        "description": "Updates existing authentication data for an agent. This endpoint allows you to add new credentials or modify existing ones in your agent's secure credential vault using an existing auth token. Any overlapping keys will be replaced with the new values.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAgentAuthProfileRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Authentication data updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - auth data doesn't match agent arguments",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid API key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/upsert_agent_auth_profile": {
      "post": {
        "description": "Creates or updates a secure authentication profile for an agent. This endpoint can either create a new profile (returning a new auth token) or update an existing one (using the provided auth token). Authentication profiles are uniquely identified by agent_id + name.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpsertAgentAuthProfileRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Authentication profile created or updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpsertAgentAuthProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - auth data doesn't match agent arguments or missing required parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid API key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - auth profile not found when updating",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/get_session_result/{session_id}": {
      "get": {
        "description": "Returns the complete session result including the execution data and output. This endpoint is useful for retrieving the final result of a completed session.",
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "description": "Unique identifier for the session",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Complete session result data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionResultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "SessionExecutionData": {
        "type": "object",
        "description": "Response schema for session execution data",
        "required": ["metadata", "blocks", "agent_metadata"],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/SessionExecutionMetadata"
          },
          "blocks": {
            "type": "array",
            "description": "List of executed workflow blocks in the session",
            "items": {
              "$ref": "#/components/schemas/WorkBlockExecutionLogResponse"
            }
          },
          "agent_metadata": {
            "$ref": "#/components/schemas/BasicAgentMetadata"
          }
        }
      },
      "SessionExecutionMetadata": {
        "type": "object",
        "description": "Metadata about the session execution",
        "required": ["session_id", "agent_id", "version_id", "status", "start_time"],
        "properties": {
          "session_id": {
            "type": "string",
            "description": "Unique identifier for the session"
          },
          "agent_id": {
            "type": "string",
            "description": "Identifier of the agent that executed the session"
          },
          "version_id": {
            "type": "integer",
            "description": "Version identifier of the agent"
          },
          "status": {
            "type": "string",
            "description": "Current status of the session execution"
          },
          "start_time": {
            "type": "integer",
            "description": "Unix timestamp when the session started"
          },
          "end_time": {
            "type": "integer",
            "description": "Unix timestamp when the session ended",
            "nullable": true
          },
          "output": {
            "description": "Final output of the session execution",
            "nullable": true
          },
          "error_message": {
            "type": "string",
            "description": "Error message if the session failed",
            "nullable": true
          }
        }
      },
      "WorkBlockExecutionLogResponse": {
        "type": "object",
        "description": "Information about an executed workflow block",
        "required": ["id", "session_id", "block_id", "iteration_number", "cached", "replaced_variables", "original_prompt", "start_time", "end_time"],
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the block execution"
          },
          "session_id": {
            "type": "string",
            "description": "Identifier of the session this block belongs to"
          },
          "block_id": {
            "type": "string",
            "description": "Identifier of the workflow block"
          },
          "parent_block_id": {
            "type": "string",
            "description": "Identifier of the parent block if applicable",
            "nullable": true
          },
          "iteration_number": {
            "type": "integer",
            "description": "Iteration number of the block execution"
          },
          "output": {
            "description": "Output of the block execution",
            "nullable": true
          },
          "cached": {
            "type": "boolean",
            "description": "Whether the block execution result was cached"
          },
          "replaced_variables": {
            "type": "object",
            "description": "Variables that were replaced in the block execution"
          },
          "original_prompt": {
            "type": "string",
            "description": "Original prompt used for the block execution"
          },
          "start_time": {
            "type": "integer",
            "description": "Unix timestamp when the block execution started"
          },
          "end_time": {
            "type": "integer",
            "description": "Unix timestamp when the block execution ended"
          },
          "debug_data": {
            "type": "object",
            "description": "Debug data for the block execution",
            "nullable": true
          },
          "block_type": {
            "type": "string",
            "description": "Type of the workflow block",
            "nullable": true
          },
          "error_message": {
            "type": "string",
            "description": "Error message if the block execution failed",
            "nullable": true
          }
        }
      },
      "BasicAgentMetadata": {
        "type": "object",
        "description": "Basic metadata about the agent",
        "required": ["agent_id"],
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of the agent",
            "nullable": true
          },
          "agent_id": {
            "type": "string",
            "description": "Unique identifier for the agent"
          }
        }
      },
      "AgentRunRequest": {
        "type": "object",
        "required": ["agent_id", "api_key"],
        "properties": {
          "agent_id": {
            "type": "string",
            "description": "Unique identifier for the agent"
          },
          "parameters": {
            "type": "object",
            "description": "Key-value pairs of parameters for the agent run",
            "additionalProperties": {
              "type": "string"
            }
          },
          "api_key": {
            "type": "string",
            "description": "API key for authentication"
          },
          "auth_token": {
            "type": "string",
            "description": "Optional token obtained from the [/api/create_agent_auth_profile](/api-reference/endpoint/create_agent_auth_profile) endpoint that allows the agent to access encrypted authentication data. This token can only be used with the specific agent_id it was generated for.",
            "nullable": true
          },
          "run_async": {
            "type": "boolean",
            "description": "Controls whether the agent runs asynchronously. When set to false, the request will block until the agent completes execution.",
            "default": true
          }
        }
      },
      "AgentRunResponse": {
        "type": "object",
        "description": "Response schema for agent run",
        "required": ["agent_run_url", "session_id"],
        "properties": {
          "agent_run_url": {
            "type": "string",
            "description": "URL to view the agent running in the web interface",
            "example": "https://app.trykura.com/public-session-viewer/250ba43a-9597-486a-b718-aa61280fdd65"
          },
          "session_id": {
            "type": "string",
            "description": "Unique identifier for the created session",
            "example": "250ba43a-9597-486a-b718-aa61280fdd65"
          },
          "agent_output": {
            "description": "Output from the agent execution. Only included when run_async is set to false.",
            "nullable": true
          },
          "error_message": {
            "type": "string",
            "description": "Error message if the agent execution failed. Only included when run_async is set to false.",
            "nullable": true
          }
        }
      },
      "Error": {
        "required": [
          "error",
          "message"
        ],
        "type": "object",
        "properties": {
          "error": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "SessionStatusResponse": {
        "type": "object",
        "description": "Response schema for session status information",
        "required": ["status"],
        "properties": {
          "status": {
            "type": "string",
            "description": "Current status of the session",
            "enum": ["initializing", "running", "complete", "failed"]
          }
        }
      },
      "CreateAgentAuthProfileRequest": {
        "type": "object",
        "required": ["name", "agent_id", "api_key", "auth_data"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the auth data entry, usually the name of the account or service"
          },
          "agent_id": {
            "type": "string",
            "description": "Unique identifier for the agent"
          },
          "api_key": {
            "type": "string",
            "description": "API key for authentication"
          },
          "auth_data": {
            "type": "object",
            "description": "Key-value pairs of sensitive authentication data that will be encrypted. Keys must match the agent's defined input arguments.",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "CreateAgentAuthProfileResponse": {
        "type": "object",
        "required": ["auth_token"],
        "properties": {
          "auth_token": {
            "type": "string",
            "description": "Secure token provided when running the agent to access stored authentication data",
            "example": "YWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXoxMjM0NTY3ODkwYWJjZGVmZ2g="
          }
        }
      },
      "UpdateAgentAuthProfileRequest": {
        "type": "object",
        "required": ["api_key", "auth_token", "auth_data"],
        "properties": {
          "api_key": {
            "type": "string",
            "description": "API key for authentication"
          },
          "auth_token": {
            "type": "string",
            "description": "Token previously obtained from the create_agent_auth_profile endpoint"
          },
          "auth_data": {
            "type": "object",
            "description": "Key-value pairs of sensitive authentication data that will be encrypted. Keys must match the agent's defined input arguments.",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "UpsertAgentAuthProfileRequest": {
        "type": "object",
        "required": ["agent_id", "api_key", "auth_data"],
        "properties": {
          "agent_id": {
            "type": "string",
            "description": "The ID of the agent to associate with this auth profile"
          },
          "api_key": {
            "type": "string",
            "description": "The API key for authentication"
          },
          "auth_data": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Key-value pairs of authentication data that matches the agent's input arguments"
          },
          "name": {
            "type": "string",
            "description": "Name of the authentication profile (required for creation, optional for updates)"
          },
          "should_save_session": {
            "type": "boolean",
            "description": "Whether to save session data between agent runs (optional)"
          },
          "auth_token": {
            "type": "string",
            "description": "The auth token for updating an existing profile (required for updates)"
          }
        }
      },
      "UpsertAgentAuthProfileResponse": {
        "type": "object",
        "properties": {
          "auth_token": {
            "type": "string",
            "description": "The authentication token to use with run_agent (returned for newly created profiles)"
          },
          "name": {
            "type": "string",
            "description": "The name of the authentication profile"
          },
          "type": {
            "type": "string",
            "enum": ["create", "update", "replace"],
            "description": "The type of operation performed (create, update, or replace)"
          }
        }
      },
      "SessionResultResponse": {
        "type": "object",
        "description": "Response schema for session result data",
        "required": ["status", "result"],
        "properties": {
          "status": {
            "type": "string",
            "description": "Current status of the session"
          },
          "result": {
            "description": "The output result of the session execution"
          },
          "error_message": {
            "type": "string",
            "description": "Error message if the session failed",
            "nullable": true
          }
        }
      }
    }
  }
}